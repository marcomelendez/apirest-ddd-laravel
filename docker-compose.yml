services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    # phpmyadmin:
    #     image: phpmyadmin
    #     restart: always
    #     ports:
    #         - 8080:80
    #     environment:
    #       - PMA_ARBITRARY=1
    #       - PMA_HOSTS=mysql
    #       - PMA_USER=${DB_USERNAME}
    #       - PMA_PASSWORD=${DB_PASSWORD}
    #     networks:
    #       - sail
    # sonarqube:
    #     image: sonarqube:lts-community
    #     depends_on:
    #     - sonar_db
    #     - init
    #     environment:
    #         SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
    #         SONAR_JDBC_USERNAME: sonar
    #         SONAR_JDBC_PASSWORD: sonar
    #     ports:
    #         - "9001:9000"
    #     volumes:
    #         - sonarqube_conf:/opt/sonarqube/conf
    #         - sonarqube_data:/opt/sonarqube/data
    #         - sonarqube_extensions:/opt/sonarqube/extensions
    #         - sonarqube_logs:/opt/sonarqube/logs
    #         - sonarqube_temp:/opt/sonarqube/temp
    #     networks:
    #       - sail
    # sonar_db:
    #     image: postgres:13
    #     environment:
    #         POSTGRES_USER: sonar
    #         POSTGRES_PASSWORD: sonar
    #         POSTGRES_DB: sonar
    #     volumes:
    #         - sonar_db:/var/lib/postgresql
    #         - sonar_db_data:/var/lib/postgresql/data
    #     networks:
    #       - sail
    # init:
    #     image: busybox
    #     command: sysctl -w vm.max_map_count=262144
    #     privileged: true
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    # sonarqube_conf:
    # sonarqube_data:
    # sonarqube_extensions:
    # sonarqube_logs:
    # sonarqube_temp:
    # sonar_db:
    # sonar_db_data:
